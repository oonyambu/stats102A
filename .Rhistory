# Args:
# x: positive integer (dimension 1)
# Return:
# integer vector (dimension 1)
if (!(is.numeric(x) & x %% 1 == 0 & x < Inf & x > 1)) {
warning("The input must be a positive integer.")
}
(x / x:1)[0 == (x / x:1) %% 1][sapply((x / x:1)[0 == (x / x:1) %% 1], is_prime)]
}
get_factors(10)
is_prime <- function(x) {
# Determines whether or not a positive integer is prime
# Args:
# x: positive integer (dimension 1)
# Return:
# logical scalar (dimension 1)
if (!(is.numeric(x) & x %% 1 == 0 & x < Inf & x > 1)) {
warning("The input must be a positive integer.")
}
if (x == 1) {
FALSE
} else if (x == 2) {
TRUE
} else {
all(0 != (x / 2:(x - 1)) %% 1)
}
}
get_factors(10)
get_factors(12)
get_factors(100)
a=try({setTimeLimit(0.1);while(TRUE)1},silent = TRUE)
A
a
simpleError(a)
simpleError(a)$message
comp <- function(x,studentFUN,correctFUN,class_value = "numeric"){
student <- try({setTimeLimit(0.5);suppressMessages(
suppressWarnings(do.call(studentFUN,as.list(x))))},silent = TRUE)
correct <- try(do.call(correctFUN,as.list(x)),silent = TRUE)
if(is(correct,"try-error")){
nl <- is.null(student)
if(!nl){
if(is(student,'try-error')&grepl("CPU time limit",simpleError(a)$message)){
return(c(grade = 0, remark = simpleError(a)$message))
}
!is(student,class_value)|is.na(student)
else nl
}
else{
if (is(student,'try-error')){
return(c(grade = 0,
remark = simpleError(student)$message))
}
student == correct
}
}
}
comp <- function(x,studentFUN,correctFUN,class_value = "numeric"){
student <- try({setTimeLimit(0.5);suppressMessages(
suppressWarnings(do.call(studentFUN,as.list(x))))},silent = TRUE)
correct <- try(do.call(correctFUN,as.list(x)),silent = TRUE)
if(is(correct,"try-error")){
nl <- is.null(student)
if(!nl){
if(is(student,'try-error')&grepl("CPU time limit",simpleError(a)$message)){
return(c(grade = 0, remark = simpleError(a)$message))
}
!is(student,class_value)|is.na(student)
}
else{
if (is(student,'try-error')){
return(c(grade = 0,
remark = simpleError(student)$message))
}
student == correct
}
}
}
comp(list(1,2),function(x,y)while(x)y,function(x,y)x+y)
comp <- function(x,studentFUN,correctFUN,class_value = "numeric"){
student <- try({setTimeLimit(0.5);suppressMessages(
suppressWarnings(do.call(studentFUN,as.list(x))))},silent = TRUE)
correct <- try(do.call(correctFUN,as.list(x)),silent = TRUE)
if(is(correct,"try-error")){
nl <- is.null(student)
if(!nl){
if(is(student,'try-error')&grepl("CPU time limit",simpleError(a)$message)){
return(simpleError(a)$message)
}
!is(student,class_value)|is.na(student)
}
}
else{
if (is(student,'try-error')){
return(c(grade = 0,
remark = simpleError(student)$message))
}
student == correct
}
}
comp(list(1,2),function(x,y)while(x)y,function(x,y)x+y)
comp <- function(x,studentFUN,correctFUN,class_value = "numeric"){
student <- try({setTimeLimit(0.5);suppressMessages(
suppressWarnings(do.call(studentFUN,as.list(x))))},silent = TRUE)
correct <- try(do.call(correctFUN,as.list(x)),silent = TRUE)
if(is(correct,"try-error")){
nl <- is.null(student)
if(!nl){
if(is(student,'try-error')&grepl("CPU time limit",simpleError(a)$message)){
return(simpleError(a)$message)
}
!is(student,class_value)|is.na(student)
}
}
else{
if (is(student,'try-error')){
return(remark = simpleError(student)$message)
}
student == correct
}
}
library(stats102A)
tst <- data.frame(matrix(c(1071,462,
18678,120,
24,60,
30,24,
98,99,
0,10,
33,121,
432,1452,
462,1452,
-3,5,0.7,0.8,1.0,5.0),ncol = 2,byrow=T))
tst <- list(gcd = convt2list(tst),
gcd_3= convt2list(cbind(tst,c(42,30,100,36,77,13,69,18,54,4,5,7.0))))
stu <- "D:\\Work\\school\\102A\\stats102A\\tests\\testthat\\students"
te <- "D:\\Work\\school\\102A\\stats102A\\tests\\testthat/987654321_stat102a_test.R"
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
comp <- function(x,studentFUN,correctFUN,class_value = "numeric"){
student <- try({setTimeLimit(0.5);suppressMessages(
suppressWarnings(do.call(studentFUN,as.list(x))))},silent = TRUE)
correct <- try(do.call(correctFUN,as.list(x)),silent = TRUE)
if(is(correct,"try-error")){
nl <- is.null(student)
if(!nl){
mes <- simpleError(student)$message
if(is(student,'try-error')&grepl("CPU time limit",mes)){
return(mes)
}
!is(student,class_value)|is.na(student)
}
}
else{
if (is(student,'try-error')){
return(remark = simpleError(student)$message)
}
student == correct
}
}
library(stats102A)
tst <- data.frame(matrix(c(1071,462,
18678,120,
24,60,
30,24,
98,99,
0,10,
33,121,
432,1452,
462,1452,
-3,5,0.7,0.8,1.0,5.0),ncol = 2,byrow=T))
tst <- list(gcd = convt2list(tst),
gcd_3= convt2list(cbind(tst,c(42,30,100,36,77,13,69,18,54,4,5,7.0))))
stu <- "D:\\Work\\school\\102A\\stats102A\\tests\\testthat\\students"
te <- "D:\\Work\\school\\102A\\stats102A\\tests\\testthat/987654321_stat102a_test.R"
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
te <- "D:\\Work\\school\\102A\\stats102A\\tests\\testthat/987654321_stat102a_test.R"
mean(c(T,T,T,T,NA),na.rm = T)
as.logical("fgrth")
as.logical("fgrth ddf d")
library(stats102A)
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
source('D:/Work/school/102A/stats102A/R/utils.R')
library(stats102A)
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
library(stats102A)
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
library(stats102A)
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
test_function
source('D:/Work/school/102A/stats102A/R/convt2list.R')
source('D:/Work/school/102A/stats102A/R/utils.R')
source('D:/Work/school/102A/stats102A/R/grade_Rscripts.R')
stu <- "D:\\Work\\school\\102A\\stats102A\\tests\\testthat\\students"
source(stu)
list.files(stu,recursive = T,full.names = T)
list.files(stu,recursive = T,full.names = T)[3]
source(list.files(stu,recursive = T,full.names = T)[3])
source(te)
comp(list(1,3),gcd_three,gcd_3)
comp(list(1,3.4),gcd_three,gcd_3)
comp(list(0,3.4),gcd_three,gcd_3)
source(te,teacher)
source(list.files(stu,recursive = T,full.names = T)[3])
gdc(1,3)
gcd(1,3)
comp(list(0,3.4),gcd,teacher$gcd)
comp(list(0,3),gcd,teacher$gcd)
comp(list(1,3),gcd,teacher$gcd)
comp(list(1,3.4),gcd,teacher$gcd)
tst
tst[[1]]
sapply(tst[[1]],comp,gcd,teacher$gcd)
tst[[1]][[10]]
gcd(-3,5)
teacher$gcd(-3,5)
comp(list(-1,4)),gcd,teacher$gcd)
comp(list(-1,4),gcd,teacher$gcd)
comp <- function(x,studentFUN,correctFUN,class_value = "numeric"){
student <- try({setTimeLimit(0.5);suppressMessages(
suppressWarnings(do.call(studentFUN,as.list(x))))},silent = TRUE)
correct <- try(do.call(correctFUN,as.list(x)),silent = TRUE)
if(is(correct,"try-error")){
nl <- is.null(student)
if(!nl){
mes <- simpleError(student)$message
if(is(student,'try-error')&grepl("CPU time limit",mes)){
return(mes)
}
!is(student,class_value)|is.na(student)
}
else TRUE
}
else{
if (is(student,'try-error')){
return(remark = simpleError(student)$message)
}
student == correct
}
}
comp(list(-1,4),gcd,teacher$gcd)
library(stats102A)
tst <- data.frame(matrix(c(1071,462,
18678,120,
24,60,
30,24,
98,99,
0,10,
33,121,
432,1452,
462,1452,
-3,5,0.7,0.8,1.0,5.0),ncol = 2,byrow=T))
tst <- list(gcd = convt2list(tst),
gcd_3= convt2list(cbind(tst,c(42,30,100,36,77,13,69,18,54,4,5,7.0))))
stu <- "D:\\Work\\school\\102A\\stats102A\\tests\\testthat\\students"
te <- "D:\\Work\\school\\102A\\stats102A\\tests\\testthat/987654321_stat102a_test.R"
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
A=grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
A$remark
library(stats102A)
A=grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
A
gcd <- function(a,b){
if(a>0 & b>0){
while(b-a) if(a>b) a = a - b  else b = b - a
a
}}
gcd(1,2)
gcd(1,2-)
gcd(1,2-4)
gcd(-3,5)
source('D:/Work/school/102A/stats102A/tests/testthat/students/505088325/505088325_stats102a_hw1.R')
gcd(-1,3)
gcd(-1,3.5)
gcd(3,3.5)
list.files(stu,full.names = T,recursive = TRUE)
a=list.files(stu,full.names = T,recursive = TRUE)
lapply(a, function(x){source(x); sapply(tst[[1]],do.call,what="gcd")})
lapply(a, function(x){source(x); s<-try(sapply(tst[[1]],do.call,what="gcd"),silent=TRUE);s})
a
lapply(a, function(x){source(x); s<-try(sapply(tst[[1]],do.call,what="gcd"),silent=TRUE);print("done");s})
gcd(0,10)
library(stats102A)
tst <- data.frame(matrix(c(1071,462,
18678,120,
24,60,
30,24,
98,99,
0,10,
33,121,
432,1452,
462,1452,
-3,5,0.7,0.8,1.0,5.0),ncol = 2,byrow=T))
tst <- list(gcd = convt2list(tst),
gcd_3= convt2list(cbind(tst,c(42,30,100,36,77,13,69,18,54,4,5,7.0))))
stu <- "D:\\Work\\school\\102A\\stats102A\\tests\\testthat\\students"
te <- "D:\\Work\\school\\102A\\stats102A\\tests\\testthat/987654321_stat102a_test.R"
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
round(0.45678,3)
any(c(F,NA,F))
any(!c(F,NA,F))
library(stats102A)
all(c(T,NA,T))
all(c(T,NA,T,F))
fun_comp <- function(fun_name,stud_env){
test_data <- teacher$test_data[[fun_name]]
fn <- match(teacher$fun_dict[[fun_name]],nm_s <- names(stud_env),0)
s_f_name <- if(length(nm_s[fn]) == 1) nm_s[fn]  else fun_name
if(!exists(s_f_name, stud_env, inherits = FALSE, mode = "function")){
return (c(grade = 0,
remark = paste(s_f_name,
"0. You are missing the",
s_f_name, "function")))
}
stud_fun <-  get0(s_f_name,stud_env,'function',FALSE)
teach_fun <- get0(fun_name,teacher,'function',FALSE)
if(length(formalArgs(teach_fun))!=length(test_data[[1]]))
stop("Incorrect number of arguments for the test data as compared to the function")
val <- sapply(test_data[-1], comp,stud_fun, teach_fun)
print(val)
ln <- as.logical(val)
fin_val <- sum(ln,na.rm = TRUE)/length(ln) * teacher$weight[fun_name]
remark = paste(s_f_name, fin_val)
if(any(is.na(ln))|any(!ln)) {
not_work <- unlist(sample(test_data[is.na(ln)],1))
remark <- paste(s_f_name, round(fin_val,2), "Your", s_f_name,
"could not work on some data like",
toString(not_work),toString(unique(val[is.na(ln)])))
}
c (grade = fin_val , remark = remark)
}
library(stats102A)
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
library(stats102A)
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
source('D:/Work/school/102A/stats102A/tests/testthat/test-all.R')
source('D:/Work/school/102A/stats102A/tests/testthat/test-all.R')
library(stats102A)
source('D:/Work/school/102A/stats102A/tests/testthat/test-all.R')
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
source('D:/Work/school/102A/stats102A/tests/testthat/students/505088325/505088325_stats102a_hw1.R')
gcd(98,99)
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
library(stats102A)
file_name = NULL)
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
gcd(-3,5)
x <- c(-3,5)
studentFUN <- gcd
student <- try({setTimeLimit(0.5);suppressMessages(
suppressWarnings(do.call(studentFUN,as.list(x))))},silent = TRUE)
student
correctFUN<- function(a,b){
stopifnot(a>0,b>0,as.integer(a)==a,as.integer(b)== b)
while(b-a) if(a>b) a = a - b  else b = b - a
a
}
correct <- try(do.call(correctFUN,as.list(x)),silent = TRUE)
correct
if(is(correct,"try-error")){
nl <- is.null(student)
if(!nl){
mes <- simpleError(student)$message
if(is(student,'try-error')&grepl("CPU time limit",mes)){
return(mes)
}
!is(student,class_value)|is.na(student)
}
else TRUE
}
comp <- function(x,studentFUN,correctFUN,class_value = "numeric"){
student <- try({setTimeLimit(0.5);suppressMessages(
suppressWarnings(do.call(studentFUN,as.list(x))))},silent = TRUE)
correct <- try(do.call(correctFUN,as.list(x)),silent = TRUE)
if(is(correct,"try-error")){
nl <- is.null(student)
if(!nl){
mes <- simpleError(student)$message
if(is(student,'try-error')&grepl("CPU time limit",mes)){
return(mes)
}
!is(student,class_value)|is.na(student)
}
else TRUE
}
else{
if (is(student,'try-error')){
return(remark = simpleError(student)$message)
}
student == correct
}
}
source('D:/Work/school/102A/stats102A/R/utils.R')
source('D:/Work/school/102A/stats102A/R/grade_Rscripts.R')
source('D:/Work/school/102A/stats102A/R/utils.R')
student_dir = stu
teacher_file = te
function_test_data = tst
file_name = NULL
weight = 1
keep_par_names = FALSE
fun_dict = NULL
make_teacher(student_dir,teacher_file,
function_test_data,weight,
keep_par_names ,
fun_dict)
student_files <- list.files(student_dir,"\\.R$",ignore.case = TRUE,
recursive = TRUE, full.names = TRUE)
compare(student_files[3])
compare(student_files[1])
compare(student_files[3])
student_file <- student_files[3]
stud_env <- new.env()
studentID <- sub(".*/", "", dirname(student_file))
stud_env$ID  <- studentID
scr <- try(source(student_file,stud_env),TRUE)
if (is(scr,"try-error")){
return( c(ID = studentID,grade=0,
remark =simpleError(scr)$message))
}
names(teacher$fun_dict)
fun_comp("gcd",stud_env)
debug(fun_comp)
fun_comp("gcd",stud_env)
fn
val
test_data[[5]]
comp(test_data[[5]],stud_fun,teach_fun)
comp(test_data[[1]],stud_fun,teach_fun)
comp(test_data[[2]],stud_fun,teach_fun)
comp(test_data[[3]],stud_fun,teach_fun)
comp(test_data[[4]],stud_fun,teach_fun)
comp(test_data[[5]],stud_fun,teach_fun)
comp(test_data[[6]],stud_fun,teach_fun)
test_data[[5]]
test_data[[6]]
gcd
gcd(0,10)
undebug()
library(stats102A)
source('D:/Work/school/102A/stats102A/tests/testthat/test-all.R')
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
tst[[1]][1:3]
sapply(tst[[1]][1:3],do.call,tostring)
sapply(tst[[1]][1:3],do.call,what=toString)
sapply(tst[[1]][1:3],do.call,what=paste)
sapply(tst[[1]][1:3],do.call,what=paste,sep = ',')
sapply(tst[[1]][1:3],do.call,what=paste)
sapply(tst[[1]][1:3],function(x)toString(unlist(x)))
source('D:/Work/school/102A/stats102A/R/utils.R')
library(stats102A)
tst <- data.frame(matrix(c(1071,462,
18678,120,
24,60,
30,24,
98,99,
0,10,
33,121,
432,1452,
462,1452,
-3,5,0.7,0.8,1.0,5.0),ncol = 2,byrow=T))
tst <- list(gcd = convt2list(tst),
gcd_3= convt2list(cbind(tst,c(42,30,100,36,77,13,69,18,54,4,5,7.0))))
stu <- "D:\\Work\\school\\102A\\stats102A\\tests\\testthat\\students"
te <- "D:\\Work\\school\\102A\\stats102A\\tests\\testthat/987654321_stat102a_test.R"
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
grade_Rscripts(stu,te,tst
,fun_dict = list(gcd_3 = c("gcd_three","gcd3","GCD")))
search()
stats102A::teacher
library(stats102A)
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
library(stats102A)
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
tst <- data.frame(matrix(c(1071,462,
18678,120,
24,60,
30,24,
98,99,
0,10,
33,121,
432,1452,
462,1452,
-3,5,0.7,0.8,1.0,5.0),ncol = 2,byrow=T))
fix(tst)
tst
dput(tst)
tst <- list(gcd = convt2list(tst),
gcd_3 = convt2list(cbind(tst,c(42,30,100,36,77,13,69,18,54,4,5))))
tst
library(stats102A)
setwd("D:/Work/school/102A/stats102A/tests/testthat")
list.dirs()
list.files()
remove.packages("stats102A")
