devtools::document()
opts
opts()
?make_teacher()
?make_teacher
r"D:\school\Teach\Stat102A\grading\hw1\submissions"
r"(D:\school\Teach\Stat102A\grading\hw1\submissions)"
create_student_folder <- function(path){
list.files(path = path, recursive = TRUE)
}
p <- r"(D:\school\Teach\Stat102A\grading\hw1\submissions)"
create_student_folder(p)
create_student_folder <- function(path){
fls <- list.files(path = path, recursive = TRUE)
split(fls, tools::file_path_sans_ext(fls))
}
create_student_folder(p)
create_student_folder <- function(path){
fls <- list.files(path = path, recursive = TRUE)
split(fls, sub("_.*_(\\d{9})_", "\\1", tools::file_path_sans_ext(fls)))
}
create_student_folder(p)
create_student_folder <- function(path){
fls <- list.files(path = path, recursive = TRUE)
split(fls, sub("_.*_(\\d{9})_", "_\\1_", tools::file_path_sans_ext(fls)))
}
create_student_folder(p)
p <- r"(D:\school\Teach\Stat102A\grading\hw1\submissions)"
create_student_folder <- function(path){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
split(fls, sub("_.*_(\\d{9})_", "_\\1_", tools::file_path_sans_ext(fls)))
}
p <- r"(D:\school\Teach\Stat102A\grading\hw1\submissions)"
create_student_folder(p)
get_decimal <- function(x){
x %/%1
}
get_decimal(2.345)
get_decimal <- function(x){
x %%1
}
get_decimal(2.345)
get_digit_after_dec <- function(x){
(x*10)
}
get_digit_after_dec(2.345)
get_digit_after_dec <- function(x){
(x*10) %%1
}
get_digit_after_dec(2.345)
get_digit_after_dec <- function(x){
(x*10) %/%1
}
get_digit_after_dec(2.345)
get_digit_after_dec <- function(x){
(x*10) %/%1 %%10
}
get_digit_after_dec(2.345)
get_digit_after_dec(2)
get_digit_at_pos <- function(x, pos){
x * 10^pos
}
get_digit_at_pos <- function(x, pos){
x / 10^pos
}
get_digit_at_pos(612.34, 2)
get_digit_at_pos <- function(x, pos){
(x / 10^pos) %/%1
}
get_digit_at_pos(612.34, 2)
get_digit_at_pos <- function(x, pos){
(x / 10^pos) %/%1 %% 10
}
get_digit_at_pos(612.34, 2)
get_digit_at_pos(612.34, 0)
get_digit_at_pos(612.34, 1)
get_digit_at_pos(612.34, -1)
get_digit_at_pos(612.34, -2)
# Question 2
cbrt <- function(x) abs(x)^(1/3)
cbrt(-8)
# Question 2
cbrt <- function(x) sign(x) *abs(x)^(1/3)
cbrt(-8)
# Question 3
swap_first_last <- function(x) {
temp <- x[1]
x[1] <- x[length(x)]
x[ength(x)] <- temp
x
}
swap_first_last(c(1:4))
# Question 3
swap_first_last <- function(x) {
temp <- x[1]
x[1] <- x[length(x)]
x[length(x)] <- temp
x
}
swap_first_last(c(1:4))
setwd("D:/school/Teach/Stat102A/grading/hw1")
grade_Rscripts("submissions/", "teacher_file.R")
rnorm(1000, 200, 20)
rnorm(1000, 200, 50)
rnorm(1000, 200, 500)
runif(1000, 0, 1000)
runif(1000, 0, 10000)
a<-runif(1000, 0, 10000)
<-data.frame(runif(1000, 0, 10000))
grade_Rscripts("submissions/", "teacher_file.R")
test <- list(
get_decimal = data.frame(x = runif(1000, 0, 10000)),
get_digit_after_dec = data.frame(x = runif(1000, 0, 10000)),
get_digit_at_pos = dplyr::mutate(data.frame(x = runif(1000, 0, 10000)),
pos = sapply(nchar(x) - 1, sample, 1)))
grade_Rscripts("submissions/", "teacher_file.R", function_test_data = test)
convt2list(test)
grade_Rscripts("submissions/", "teacher_file.R", function_test_data = lapply(test, convt2list))
?grade_Rscripts("submissions/", "teacher_file.R", function_test_data = lapply(test, convt2list))
grade_Rscripts("submissions/", "teacher_file.R", function_test_data = lapply(test, convt2list), keep_par_names = TRUE)
create_student_folder <- function(path){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
split(fls, sub("_.*_(\\d{9})_", "_\\1_", tools::file_path_sans_ext(fls)))
}
create_student_folder(p)
fls <- split(fls, sub("_.*_(\\d{9})_", "_\\1_", tools::file_path_sans_ext(fls)))
file.path("a", "b")
create_student_folder <- function(path, write_to = "../submissions2"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
fls <- split(fls, sub(".*_.*_(\\d{9})_.*", "_\\1_", tools::file_path_sans_ext(fls)))
Map(\(x, nms){if(!dir.exists(nms))dir.create(nms);
file.copy(x, sub("submissions",
file.path(write_to, nms)))}, fls, names(fls))
}
create_student_folder(p)
create_student_folder <- function(path, write_to = "../submissions2"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
fls <- split(fls, sub(".*_.*_(\\d{9})_.*", "_\\1_", tools::file_path_sans_ext(fls)))
f <- function(x, nms){
dr <- file.path(write_to, nms)
if(!dir.exists(dr))dir.create(nms);
file.copy(x, sub("submissions", dr, x))
}
Map(f, fls, names(fls))
}
create_student_folder(p)
create_student_folder <- function(path, write_to = "../submissions2"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
fls <- split(fls, sub(".*_.*_(\\d{9})_.*", "\\1", tools::file_path_sans_ext(fls)))
f <- function(x, nms){
dr <- file.path(write_to, nms)
if(!dir.exists(dr))dir.create(dr);
file.copy(x, sub("submissions", dr, x))
}
Map(f, fls, names(fls))
}
create_student_folder(p)
create_student_folder <- function(path, write_to = "../submissions2"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
fls <- split(fls, sub(".*_.*_(\\d{9})_.*", "\\1", tools::file_path_sans_ext(fls)))
f <- function(x, nms){
dr <- file.path(write_to, nms)
if(!dir.exists(dr))dir.create(dr);
file.copy(x, sub("submissions", dr, x))
}
#Map(f, fls, names(fls))
}
create_student_folder <- function(path, write_to = "../submissions2"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
fls <- split(fls, sub(".*_.*_(\\d{9})_.*", "\\1", tools::file_path_sans_ext(fls)))
f <- function(x, nms){
dr <- file.path(write_to, nms)
if(!dir.exists(dr))dir.create(dr);
#file.copy(x, sub("submissions", dr, x))
dr
}
Map(f, fls, names(fls))
}
create_student_folder(p)
warnings()
create_student_folder <- function(path, write_to = "submissions2"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
fls <- split(fls, sub(".*_.*_(\\d{9})_.*", "\\1", tools::file_path_sans_ext(fls)))
f <- function(x, nms){
dr <- file.path(write_to, nms)
if(!dir.exists(dr))dir.create(dr);
#file.copy(x, sub("submissions", dr, x))
dr
}
Map(f, fls, names(fls))
}
warnings()
create_student_folder(p)
create_student_folder <- function(path, write_to = "submissions2"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
return dirname(fls)
create_student_folder <- function(path, write_to = "submissions2"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
return (dirname(fls))
fls <- split(fls, sub(".*_.*_(\\d{9})_.*", "\\1", tools::file_path_sans_ext(fls)))
f <- function(x, nms){
dr <- file.path(write_to, nms)
if(!dir.exists(dr))dir.create(dr);
#file.copy(x, sub("submissions", dr, x))
dr
}
Map(f, fls, names(fls))
}
create_student_folder(p)
create_student_folder <- function(path, write_to = "submissions2"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
fls <- split(fls,
file.path(write_to,
sub(".*_.*_(\\d{9})_.*", "\\1",
tools::file_path_sans_ext(fls))))
f <- function(x, dr){
if(!dir.exists(dr))dir.create(dr);
#file.copy(x, sub("submissions", dr, x))
dr
}
Map(f, fls, names(fls))
}
create_student_folder(p)
warnings()
create_student_folder <- function(path, write_to = "submissions2"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
fls <- file.path(write_to,
sub(".*_.*_(\\d{9})_.*", "\\1",
tools::file_path_sans_ext(fls)))
#if(!dir.exists(dr))dir.create(dr,recursive = TRUE);
#Map(f, fls, names(fls))
}
warnings()
create_student_folder(p)->a
a
p <- r"(D:\school\Teach\Stat102A\grading\hw1\submissions)"
create_student_folder <- function(path, write_to = "submissions2"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
fls <- file.path(write_to,
sub(".*_.*_(\\d{9})_.*", "\\1",
tools::file_path_sans_ext(fls)))
dir.exists(fls)
#if(!dir.exists(dr))dir.create(dr,recursive = TRUE);
#Map(f, fls, names(fls))
}
p <- r"(D:\school\Teach\Stat102A\grading\hw1\submissions)"
create_student_folder(p)
create_student_folder <- function(path, write_to = "submissions2"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
fls <- file.path(dirname(fls),
write_to,
sub(".*_.*_(\\d{9})_.*", "\\1",
tools::file_path_sans_ext(fls)))
#if(!dir.exists(dr))dir.create(dr,recursive = TRUE);
#Map(f, fls, names(fls))
}
create_student_folder(p)->a
A
a
create_student_folder <- function(path, write_to = "submissions2"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
fls <- file.path(dirname(fls),
write_to, sub(".*_.*_(\\d{9})_.*", "\\1",fls))
#if(!dir.exists(dr))dir.create(dr,recursive = TRUE);
#Map(f, fls, names(fls))
}
create_student_folder(p)->a
a
?file.copy
create_student_folder <- function(path, write_to = "submissions"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
dr <- file.path(dirname(fls),
write_to, sub(".*_.*_(\\d{9})_.*", "\\1",fls))
#if(!dir.exists(dr))dir.create(dr,recursive = TRUE);
file.copy(fls, dr, overwrite = TRUE, recursive = TRUE)
}
create_student_folder(p)->a
warnings()
create_student_folder <- function(path, write_to = "submissions"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
dr <- file.path(dirname(fls),
write_to, sub(".*_.*_(\\d{9})_.*", "\\1",fls))
if(!dir.exists(dr))dir.create(dr,recursive = TRUE);
file.copy(fls, dr, overwrite = TRUE, recursive = TRUE)
}
create_student_folder(p)->a
create_student_folder <- function(path, write_to = "submissions"){
fls <- list.files(path = path,full.names = TRUE, all.files = TRUE, include.dirs = TRUE,
recursive = TRUE)
dr <- file.path(dirname(fls),
write_to, sub(".*_.*_(\\d{9})_.*", "\\1",fls))
sapply(dr, \(x)if(!dir.exists(x))dir.create(x,recursive = TRUE))
file.copy(fls, dr, overwrite = TRUE, recursive = TRUE)
}
create_student_folder(p)->a
warnings()
