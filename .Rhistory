comp(test_data[[5]],stud_fun,teach_fun)
comp(test_data[[6]],stud_fun,teach_fun)
test_data[[5]]
test_data[[6]]
gcd
gcd(0,10)
undebug()
library(stats102A)
source('D:/Work/school/102A/stats102A/tests/testthat/test-all.R')
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
tst[[1]][1:3]
sapply(tst[[1]][1:3],do.call,tostring)
sapply(tst[[1]][1:3],do.call,what=toString)
sapply(tst[[1]][1:3],do.call,what=paste)
sapply(tst[[1]][1:3],do.call,what=paste,sep = ',')
sapply(tst[[1]][1:3],do.call,what=paste)
sapply(tst[[1]][1:3],function(x)toString(unlist(x)))
source('D:/Work/school/102A/stats102A/R/utils.R')
library(stats102A)
tst <- data.frame(matrix(c(1071,462,
18678,120,
24,60,
30,24,
98,99,
0,10,
33,121,
432,1452,
462,1452,
-3,5,0.7,0.8,1.0,5.0),ncol = 2,byrow=T))
tst <- list(gcd = convt2list(tst),
gcd_3= convt2list(cbind(tst,c(42,30,100,36,77,13,69,18,54,4,5,7.0))))
stu <- "D:\\Work\\school\\102A\\stats102A\\tests\\testthat\\students"
te <- "D:\\Work\\school\\102A\\stats102A\\tests\\testthat/987654321_stat102a_test.R"
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
grade_Rscripts(stu,te,tst
,fun_dict = list(gcd_3 = c("gcd_three","gcd3","GCD")))
search()
stats102A::teacher
library(stats102A)
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
library(stats102A)
grade_Rscripts(student_dir = stu,teacher_file = te,function_test_data = tst,
file_name = NULL)
tst <- data.frame(matrix(c(1071,462,
18678,120,
24,60,
30,24,
98,99,
0,10,
33,121,
432,1452,
462,1452,
-3,5,0.7,0.8,1.0,5.0),ncol = 2,byrow=T))
fix(tst)
tst
dput(tst)
tst <- list(gcd = convt2list(tst),
gcd_3 = convt2list(cbind(tst,c(42,30,100,36,77,13,69,18,54,4,5))))
tst
library(stats102A)
setwd("D:/Work/school/102A/stats102A/tests/testthat")
list.dirs()
list.files()
remove.packages("stats102A")
stu <- "D:/Work/school/102A/stats102A/tests/testthat/students"
has_gradable_files <- function(student_dir,
conform_Naming = NULL,
Rscript = TRUE,
Rmd = TRUE,
pdf_or_html = TRUE){
s_files <- list.files(student_dir, recursive = TRUE)
files_required <- c(Rscript,Rmd,pdf_or_html)
regx <- c("R","Rmd","pdf|html")[files_required]
cnt <- sum(files_required) # # of files -> max of 3 ie R, Rmd, html|pdf
if (!cnt) stop("at least one document must be specified")
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
extensions <- grep(regx, s_files,ignore.case = TRUE)
ID  <- dirname(s_files)[extensions]
confrm <- if (is.null(conform_Naming)) NULL else grepl(conform_Naming, s_files[extensions])
exts <- tolower(sub(paste0(".*", regx), "\\1" ,s_files, ignore.case = TRUE))
has_files <- tapply(exts[extensions], ID, function(x) length(unique(x)) == cnt)
teacher$result_has_gradable_files <- data.frame(ID = names(has_files), has_files,
row.names = NULL)
if(!is.null(conform_Naming))teacher$result_has_gradable_files$conform_Naming <- confrm
teacher$result_has_gradable_files
}
has_gradable_files(stu)
stats102A::has_gradable_files(stu)
has_gradable_files <- function(student_dir,
conform_Naming = NULL,
Rscript = TRUE,
Rmd = TRUE,
pdf_or_html = TRUE){
s_files <- list.files(student_dir, recursive = TRUE)
files_required <- c(Rscript,Rmd,pdf_or_html)
regx <- c("R","Rmd","pdf|html")[files_required]
cnt <- sum(files_required) # # of files -> max of 3 ie R, Rmd, html|pdf
if (!cnt) stop("at least one document must be specified")
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
extensions <- grep(regx, s_files,ignore.case = TRUE)
ID  <- dirname(s_files)[extensions]
confrm <- if (is.null(conform_Naming)) NULL else grepl(conform_Naming, s_files[extensions])
exts <- tolower(sub(paste0(".*", regx), "\\1" ,s_files, ignore.case = TRUE))
has_files <- tapply(exts[extensions], ID, function(x) length(unique(x)) == cnt)
result_has_gradable_files <- data.frame(ID = names(has_files), has_files,
row.names = NULL)
if(!is.null(conform_Naming))result_has_gradable_files$conform_Naming <- confrm
teacher$result_has_gradable_files
}
has_gradable_files(stu)
has_gradable_files <- function(student_dir,
conform_Naming = NULL,
Rscript = TRUE,
Rmd = TRUE,
pdf_or_html = TRUE){
s_files <- list.files(student_dir, recursive = TRUE)
files_required <- c(Rscript,Rmd,pdf_or_html)
regx <- c("R","Rmd","pdf|html")[files_required]
cnt <- sum(files_required) # # of files -> max of 3 ie R, Rmd, html|pdf
if (!cnt) stop("at least one document must be specified")
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
extensions <- grep(regx, s_files,ignore.case = TRUE)
ID  <- dirname(s_files)[extensions]
confrm <- if (is.null(conform_Naming)) NULL else grepl(conform_Naming, s_files[extensions])
exts <- tolower(sub(paste0(".*", regx), "\\1" ,s_files, ignore.case = TRUE))
has_files <- tapply(exts[extensions], ID, function(x) length(unique(x)) == cnt)
result_has_gradable_files <- data.frame(ID = names(has_files), has_files,
row.names = NULL)
if(!is.null(conform_Naming))result_has_gradable_files$conform_Naming <- confrm
result_has_gradable_files
}
has_gradable_files(stu)
has_gradable_files(stu,"\\d{9}")
list.files(stu,recursive = TRUE)
has_gradable_files <- function(student_dir,
conform_Naming = NULL,
Rscript = TRUE,
Rmd = TRUE,
pdf_or_html = TRUE){
s_files <- list.files(student_dir, recursive = TRUE)
files_required <- c(Rscript,Rmd,pdf_or_html)
regx <- c("R","Rmd","pdf|html")[files_required]
cnt <- sum(files_required) # # of files -> max of 3 ie R, Rmd, html|pdf
if (!cnt) stop("at least one document must be specified")
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
extensions <- grep(regx, s_files,ignore.case = TRUE)
ID  <- dirname(s_files)[extensions]
confrm <- (if (is.null(conform_Naming)) NULL
else grepl(conform_Naming, basename(s_files[extensions])))
exts <- tolower(sub(paste0(".*", regx), "\\1" ,s_files, ignore.case = TRUE))
has_files <- tapply(exts[extensions], ID, function(x) length(unique(x)) == cnt)
result_has_gradable_files <- data.frame(ID = names(has_files), has_files,
row.names = NULL)
if(!is.null(conform_Naming))result_has_gradable_files$conform_Naming <- confrm
result_has_gradable_files
}
has_gradable_files(stu,"\\d{9}")
has_gradable_files(stu,"")
has_gradable_files(stu,"_")
has_gradable_files(stu,"^\\d")
has_gradable_files(stu,"^\\d{2}")
has_gradable_files(stu,"^\\d{2,}")
has_gradable_files(stu,"^\\d{8}")
has_gradable_files(stu,"^\\d{9}")
Rscript = TRUE
Rmd = TRUE
pdf_or_html = TRUE
files_required <- c(Rscript,Rmd,pdf_or_html)
regx <- c("R","Rmd","pdf|html")[files_required]
regx
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
regx
list.dirs(stu)
list.dirs(stu,full.names = FALSE)
list.files(stu)
list.files(stu,recursive = T)
list.files(stu,regx,recursive = T)
list.files(stu,regx,recursive = T,full.names = F)
list.files(stu,regx,recursive = T)
dirname(list.files(stu,regx,recursive = T))
list.files(stu,regx,recursive = T)
stu
list.dirs(stu,regx,recursive = T)
list.files(stu,recursive = T)
list.files(stu,recursive = T)
dirname(list.files(stu,recursive = T))
student_dir <- stud
student_dir <- stu
list.files(student_dir, regx, recursive = TRUE)
list.files(student_dir, regx, recursive = TRUE)
list.files(student_dir, regx, recursive = TRUE)
regex
?regex
regexp
?regexp
sfiles <- list.files(student_dir, regx, recursive = TRUE)
s_files
s_files
sfiles
regx <- paste0("(?i)\\.(", paste0(regx, collapse = "|"), ")$")
sfiles <- list.files(student_dir, regx, recursive = TRUE)
sfiles
sfiles <- list.files(student_dir, regx, recursive = TRUE,ignore.case = TRUE)
S_FILES
sfiles
regx <- paste0("(\\.(", paste0(regx, collapse = "|"), ")$")
sfiles <- list.files(student_dir, regx, recursive = TRUE,ignore.case = TRUE)
regx <- paste0("(\\.(", paste0(regx, collapse = "|"), ")$")
sfiles <- list.files(student_dir, regx, recursive = TRUE,ignore.case = TRUE)
regx
regx <- c("R","Rmd","pdf|html")[files_required]
regx <- paste0("(\\.(", paste0(regx, collapse = "|"), ")$")
sfiles <- list.files(student_dir, regx, recursive = TRUE,ignore.case = TRUE)
regx <- c("R","Rmd","pdf|html")[files_required]
regx <- paste0("(\\.(", paste0(regx, collapse = "|"), ")$")
regx
sfiles <- list.files(student_dir, regx, recursive = TRUE,ignore.case = TRUE)
sfiles <- list.files(student_dir, pattern = regx, recursive = TRUE,ignore.case = TRUE)
regx
list.files(student_dir, pattern = regx,
recursive = TRUE,ignore.case = TRUE)
list.files(student_dir, pattern = regx,
recursive = TRUE)
regx <- c("R","Rmd","pdf|html")[files_required]
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
list.files(student_dir, pattern = regx,
recursive = TRUE,ignore.case = TRUE)
regx <- c("R","Rmd","pdf|html")[files_required]
regx <- paste0("\\(?i).(", paste0(regx, collapse = "|"), ")$")
list.files(student_dir, pattern = regx,
recursive = TRUE)
regx <- c("R","Rmd","pdf|html")[files_required]
sfiles <- list.files(student_dir, pattern = regx,
recursive = TRUE,ignore.case = TRUE)
sfiles
sub(regx,"",basename(sfiles))
regx
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
sfiles <- list.files(student_dir, pattern = regx,
recursive = TRUE,ignore.case = TRUE)
id <- sub("/.*","",sfiles)
sub(regx,"",basename(sfiles))
sub(regx,"",basename(sfiles),ignore.case = TRUE)
tapply(grepl(regx,sfiles,ignore.case = TRUE),id,sum)
tapply(grepl(regx,sfiles,ignore.case = TRUE),id,sum)==cnt
cnt <- sum(files_required) # # of files -> max of 3 ie R, Rmd, html|pdf
tapply(grepl(regx,sfiles,ignore.case = TRUE),id,sum)==cnt
has_files <- tapply(grepl(regx,sfiles,ignore.case = TRUE),id,sum)==cnt
data.frame(ID = names(has_files), has_files,
row.names = NULL)
has_gradable_files1 <- function(student_dir,
conform_Naming = NULL,
Rscript = TRUE,
Rmd = TRUE,
pdf_or_html = TRUE){
files_required <- c(Rscript,Rmd,pdf_or_html)
regx <- c("R","Rmd","pdf|html")[files_required]
cnt <- sum(files_required) # # of files -> max of 3 ie R, Rmd, html|pdf
if (!cnt) stop("at least one document must be specified")
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
sfiles <- list.files(student_dir, pattern = regx,
recursive = TRUE,ignore.case = TRUE)
id <- sub("/.*","",sfiles)
has_files <- tapply(grepl(regx,sfiles,ignore.case = TRUE),id,sum)==cnt
result <- data.frame(ID = names(has_files), has_files,
row.names = NULL)
check_nm <- sub(regx,"",basename(sfiles),ignore.case = TRUE)
if(!is.null(conform_Naming))
result$conform_Naming <- grepl(conform_Naming,check_nm)
result
}
has_gradable_files(stu)
has_gradable_files(stu,"^\\d")
sfiles
sub("/.*","", sfiles)
has_gradable_files1 <- function(student_dir,
conform_Naming = NULL,
Rscript = TRUE,
Rmd = TRUE,
pdf_or_html = TRUE){
files_required <- c(Rscript,Rmd,pdf_or_html)
regx <- c("R","Rmd","pdf|html")[files_required]
cnt <- sum(files_required) # # of files -> max of 3 ie R, Rmd, html|pdf
if (!cnt) stop("at least one document must be specified")
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
sfiles <- list.files(student_dir, pattern = regx,
recursive = TRUE,ignore.case = TRUE)
id <- sub("/.*","", sfiles)
print(sfiles)
has_files <- tapply(grepl(regx,sfiles,ignore.case = TRUE),id,sum)==cnt
result <- data.frame(ID = names(has_files), has_files,
row.names = NULL)
check_nm <- sub(regx,"",basename(sfiles),ignore.case = TRUE)
if(!is.null(conform_Naming))
result$conform_Naming <- grepl(conform_Naming,check_nm)
result
}
has_gradable_files(stu,"^\\d")
has_gradable_files1 <- function(student_dir,
conform_Naming = NULL,
Rscript = TRUE,
Rmd = TRUE,
pdf_or_html = TRUE){
files_required <- c(Rscript,Rmd,pdf_or_html)
regx <- c("R","Rmd","pdf|html")[files_required]
cnt <- sum(files_required) # # of files -> max of 3 ie R, Rmd, html|pdf
if (!cnt) stop("at least one document must be specified")
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
sfiles <- list.files(student_dir, pattern = regx,
recursive = TRUE,ignore.case = TRUE)
id <- sub("/.*","", sfiles)
print(sfiles)
has_files <- tapply(grepl(regx,sfiles,ignore.case = TRUE),id,sum)==cnt
result <- data.frame(ID = names(has_files), has_files,
row.names = NULL)
check_nm <- sub(regx,"",basename(sfiles),ignore.case = TRUE)
if(!is.null(conform_Naming))
result$conform_Naming <- grepl(conform_Naming,check_nm)
result
}
has_gradable_files <- function(student_dir,
conform_Naming = NULL,
Rscript = TRUE,
Rmd = TRUE,
pdf_or_html = TRUE){
files_required <- c(Rscript,Rmd,pdf_or_html)
regx <- c("R","Rmd","pdf|html")[files_required]
cnt <- sum(files_required) # # of files -> max of 3 ie R, Rmd, html|pdf
if (!cnt) stop("at least one document must be specified")
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
sfiles <- list.files(student_dir, pattern = regx,
recursive = TRUE,ignore.case = TRUE)
id <- sub("/.*","", sfiles)
print(sfiles)
has_files <- tapply(grepl(regx,sfiles,ignore.case = TRUE),id,sum)==cnt
result <- data.frame(ID = names(has_files), has_files,
row.names = NULL)
check_nm <- sub(regx,"",basename(sfiles),ignore.case = TRUE)
if(!is.null(conform_Naming))
result$conform_Naming <- grepl(conform_Naming,check_nm)
result
}
has_gradable_files(stu,"^\\d")
has_gradable_files <- function(student_dir,
conform_Naming = NULL,
Rscript = TRUE,
Rmd = TRUE,
pdf_or_html = TRUE){
files_required <- c(Rscript,Rmd,pdf_or_html)
regx <- c("R","Rmd","pdf|html")[files_required]
cnt <- sum(files_required) # # of files -> max of 3 ie R, Rmd, html|pdf
if (!cnt) stop("at least one document must be specified")
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
sfiles <- list.files(student_dir, pattern = regx,
recursive = TRUE,ignore.case = TRUE)
id <- sub("/.*","", sfiles)
print(sfiles)
has_files <- grepl(regx,sfiles,ignore.case = TRUE)
result <- data.frame(ID = names(has_files), has_files,
row.names = NULL)
if(!is.null(conform_Naming))
result$check_nm <- grepl(conform_Naming,
sub(regx,"",basename(sfiles),ignore.case = TRUE))
aggregate(.~ID,result,function(x)sum(x)==cnt)
}
has_gradable_files(stu,"^\\d")
has_gradable_files(stu)
files_required <- c(Rscript,Rmd,pdf_or_html)
regx <- c("R","Rmd","pdf|html")[files_required]
cnt <- sum(files_required) # # of files -> max of 3 ie R, Rmd, html|pdf
if (!cnt) stop("at least one document must be specified")
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
sfiles <- list.files(student_dir, pattern = regx,
recursive = TRUE,ignore.case = TRUE)
id <- sub("/.*","", sfiles)
print(sfiles)
has_files <- grepl(regx,sfiles,ignore.case = TRUE)
result <- data.frame(ID = names(has_files), has_files,
row.names = NULL)
names(has_files)
has_files
has_gradable_files <- function(student_dir,
conform_Naming = NULL,
Rscript = TRUE,
Rmd = TRUE,
pdf_or_html = TRUE){
files_required <- c(Rscript,Rmd,pdf_or_html)
regx <- c("R","Rmd","pdf|html")[files_required]
cnt <- sum(files_required) # # of files -> max of 3 ie R, Rmd, html|pdf
if (!cnt) stop("at least one document must be specified")
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
sfiles <- list.files(student_dir, pattern = regx,
recursive = TRUE,ignore.case = TRUE)
id <- sub("/.*","", sfiles)
print(sfiles)
has_files <- grepl(regx,sfiles,ignore.case = TRUE)
result <- data.frame(id, has_files,
row.names = NULL)
if(!is.null(conform_Naming))
result$check_nm <- grepl(conform_Naming,
sub(regx,"",basename(sfiles),ignore.case = TRUE))
aggregate(.~id,result,function(x)sum(x)==cnt)
}
has_gradable_files(stu)
has_gradable_files <- function(student_dir,
conform_Naming = NULL,
Rscript = TRUE,
Rmd = TRUE,
pdf_or_html = TRUE){
files_required <- c(Rscript,Rmd,pdf_or_html)
regx <- c("R","Rmd","pdf|html")[files_required]
cnt <- sum(files_required) # # of files -> max of 3 ie R, Rmd, html|pdf
if (!cnt) stop("at least one document must be specified")
regx <- paste0("\\.(", paste0(regx, collapse = "|"), ")$")
sfiles <- list.files(student_dir, pattern = regx,
recursive = TRUE,ignore.case = TRUE)
id <- sub("/.*","", sfiles)
has_files <- grepl(regx,sfiles,ignore.case = TRUE)
result <- data.frame(id, has_files,
row.names = NULL)
if(!is.null(conform_Naming))
result$check_nm <- grepl(conform_Naming,
sub(regx,"",basename(sfiles),ignore.case = TRUE))
aggregate(.~id,result,function(x)sum(x)==cnt)
}
has_gradable_files(stu)
has_gradable_files(stu,"^\\d{3}")
has_gradable_files(stu,"^\\d{3}",Rmd = FALSE)
has_gradable_files(stu,"^\\d{3}",Rmd = FALSE,pdf_or_html = FALSE)
has_gradable_files(stu,"^\\d{5}",Rmd = FALSE,pdf_or_html = FALSE)
has_gradable_files(stu,"^\\d{9}",Rmd = FALSE,pdf_or_html = FALSE)
new_dir <- paste0(getwd(),"/Rmd_files_knit")
avail_pkgs <- search()
student_files <- list.files(student_dir, "\\.Rmd", recursive = TRUE,
ignore.case = TRUE,full.names = TRUE)
ID <- sub("/.*","",sub(student_dir,"",dirname(student_files)))
has_gradable_files(stu,"^\\d{9}",Rmd = FALSE,pdf_or_html = FALSE)
ID
dirname(student_files)
student_dir
student_files <- list.files(student_dir, "\\.Rmd", recursive = TRUE,
ignore.case = TRUE,full.names = TRUE)
student_files
sub(student_dir,"",dirname(student_files))
sub("/[^/]*$","",sub(student_dir,"",dirname(student_files)))
ID <- gsub("/[^/]*$|/","",sub(student_dir,"",dirname(student_files)))
ID
sub(student_dir,"",dirname(student_files))
normalizePath(sub(student_dir,"",dirname(student_files)))
student_files <- list.files(student_dir, "\\.Rmd", recursive = TRUE,
ignore.case = TRUE,full.names = TRUE)
sub(student_dir,"",dirname(student_files))
student_dir
student_dir <- normalizePath(student_dir)
new_dir <- paste0(getwd(),"/Rmd_files_knit")
avail_pkgs <- search()
student_files <- list.files(student_dir, "\\.Rmd", recursive = TRUE,
ignore.case = TRUE,full.names = TRUE)
ID <- sub(student_dir,"",dirname(student_files))
sub(student_dir,"",dirname(student_files))
student_dir
dirname(student_files)
student_files <- list.files(student_dir, "\\.Rmd", recursive = TRUE,
ignore.case = TRUE,full.names = TRUE)
student_dir
list.files(student_dir)
list.files(student_dir,recursive = T)
normalizePath(list.files(student_dir,recursive = T))
student_dir <- gsub("\\\\","/",normalizePath(student_dir))
student_dir
student_dir <- gsub("\\\\","/",normalizePath(student_dir))
new_dir <- paste0(getwd(),"/Rmd_files_knit")
avail_pkgs <- search()
student_files <- list.files(student_dir, "\\.Rmd", recursive = TRUE,
ignore.case = TRUE,full.names = TRUE)
ID <- sub(student_dir,"",dirname(student_files))
ID
endsWith(student_dir,"/")
student_dir <- gsub("\\\\","/",normalizePath(student_dir))
if(!endsWith(student_dir,"/"))student_dir <- paste0(student_dir,"/")
new_dir <- paste0(getwd(),"/Rmd_files_knit")
avail_pkgs <- search()
new_dir
new_dir <- paste0(getwd(),"/Rmd_files_knit")
avail_pkgs <- search()
student_files <- list.files(student_dir, "\\.Rmd", recursive = TRUE,
ignore.case = TRUE,full.names = TRUE)
ID <- sub(student_dir,"",dirname(student_files))
ID
student_dir
sub(student_dir,"",dirname(student_files)
)
dirname(student_files)
student_files
file.exists(student_files)
ID <- sub(paste0(student_dir,"/*"),"",dirname(student_files))
ID
ID <- sub("/*","",sub(paste0(student_dir,"/*"),"",dirname(student_files)))
ID
ID <- sub("/.*","",sub(paste0(student_dir,"/*"),"",dirname(student_files)))
id
ID
is_knitable <-  sapply(student_files,knit,new_dir,USE.NAMES = FALSE)
library(stats102A)
stu <- "D:/Work/school/102A/stats102A/tests/testthat/students"
te <- "D:/Work/school/102A/stats102A/tests/testthat/987654321_stat102a_test.R"
is_knitable_Rmd(stu)
library(stats102A)
remove.packages("stats102A")
