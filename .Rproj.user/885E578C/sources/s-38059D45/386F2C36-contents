# Question 1: Greatest Common Divisor
# This function takes two positive integers `a`, `b` and calculates their greatest common divisor using the Euclidian algorithm.
gcd <- function(a, b){
  if(a <= 0 || b <= 0){
    stop("Both inputs must be positive.")
  }
  if(as.integer(a) != a || as.integer(b) != b){
    stop("Both inputs must be an integer.")
  }
  while(b){
    temp <- b
    b <- a %% b
    a <- temp
  }
  # When the value of b becomes 0 (i.e. when `a` can no longer be divided into factors), the function will print the final value of `a`
  return(a)
}

# Test using example
gcd(180, 25)

# gcd_three()
# This function takes three positive integers `a`, `b` and `c`, and calculates their greatest common divisor using the Euclidian algorithm
gcd_three <- function(a, b, c){
    while(b){
      temp <- b
      b <- a %% b
      a <- temp
    }
    while(c){
      temp <- c
      c <- a %% c
      a <- temp
    }
  return(a)
}

# Test using example
gcd_three(180, 25, 5)


# Question 2: Prime Factorization

# get_factors()
get_factors <- function(x){
  factor <- c()
  if (x <= 0){
    stop("The input must be positive.")
  }
  if (as.integer(x) != x){
    stop("The input must be an integer.")
  }
  while(x %% 2 == 0){
    factor <- append(factor, 2)
    x <- x / 2
  }
  # Note: all prime numbers other than 2 are odd.
  for (i in 3:x){
    while(x %% i == 0){
      factor <- append(factor, i)
      x <- x / i
    }
  }
  return(factor)
}
get_factors(315)

# is_prime()
is_prime <- function(x){
  is_prime_helper <- function(y){
    if(as.integer(y) != y){ # non-integer values are not prime
      return(FALSE)
    }
    if(y <= 1){ # negative numbers, 0, and 1 are all non-prime
      return(FALSE)
    }
    if(y == 2){ # special case for 2
      return(TRUE)
    }
    max <- ceiling(sqrt(y))
    for(i in 2:max){
      if(y %% i == 0){
        return(FALSE)
      }
    }
    return(TRUE)
  }
  sapply(x, FUN = is_prime_helper)
}
is_prime(get_factors(315))

# Test if functions are written correctly:
x <- sample(x = 1e4, size = 1)
y <- get_factors(x)
this_works <- prod(y) == x & all(is_prime(y))
this_works