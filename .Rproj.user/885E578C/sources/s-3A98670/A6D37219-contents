---
title: "Final Project"
author: "Maddy Lake"
date: "12/14/2019"
output:
  html_document: default
  pdf_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}

```

# **Part 1: Data Gathering and Manipulation**

# Question 1: Getting the Data

```{r}

files <- list.files(path = "C:\\Users\\maddy\\Desktop\\R Projects\\scripts", pattern = "*.csv")
scripts <- sapply(files, read.csv, simplify = FALSE)

scripts <- do.call(rbind, scripts)



load("imdb.RData")

library(rvest)
url <- "https://en.wikipedia.org/wiki/List_of_Parks_and_Recreation_episodes"
episode_data <- html_table(html_nodes(read_html(url), xpath = "//*/table"), fill = TRUE)
parks_and_rec <- Reduce("rbind", episode_data[2:8])
parks_and_rec$Title <- gsub(pattern = "[^0-9A-Za-z.,' ]", replacement = "", parks_and_rec$Title )

row.names(scripts) <- gsub(pattern = ".csv", replacement = "", row.names(scripts))

scripts$Episode <- NULL
for(i in seq_len(nrow(scripts))) {
  scripts$Episode[i] <- substr(row.names(scripts)[i], start = 4, stop = 5)
}

scripts$Season <- NULL
for(i in seq_len(nrow(scripts))) {
  scripts$Season[i] <- substr(row.names(scripts)[i], start = 2, stop = 2)
}


scripts$Character <- as.factor(scripts$Character)
scripts$Episode <- as.numeric(scripts$Episode)
scripts$Season <- as.numeric(scripts$Season)

colnames(scripts)
dim(scripts)

colnames(imdb)
dim(imdb)

colnames(parks_and_rec)
dim(parks_and_rec)


```
There are a total of 65,942 lines spoken throughout the entire show.

# Question 2: Clean the Data

```{r}
imdb[91,1] <- ((8.6*1334)+(8.7*1160))/2494
imdb[111,1] <- ((9*1381)+(9.4*1773))/3154
imdb[124,1] <- ((9.5*2521)+(9.7*3173))/5694
imdb <- imdb[-92,]
imdb <- imdb[-111,]
imdb <- imdb[-123,]

trunc_prec <- function(x, prec = 0) {
  x <- trunc(x * 10^prec) / 10^prec
}
parks_and_rec$`U.S. viewers(millions)` <- gsub(pattern = "[^0-9A-Za-z.,' ]", replacement = "", parks_and_rec$`U.S. viewers(millions)`)

parks_and_rec$`U.S. viewers(millions)` <- lapply(as.numeric(parks_and_rec$`U.S. viewers(millions)`), trunc_prec, prec = 2)

dim(scripts)
dim(imdb)
dim(parks_and_rec)

```

# Question 3: Augment the Data

## (1)

```{r}
comb_ep_data <- cbind(parks_and_rec, imdb)

comb_ep_data$FleschRE <- 1


for (j in 1:7) {
  if (j == 1) {
    s1lines <- vector()
    for (i in seq_len(6)){
      s1lines[i] <- paste(scripts$Line[which(scripts$Season == j & scripts$Episode == i)], collapse = "")
    }

  }
  else if (j == 2) {
    s2lines <- vector()
    for (i in seq_len(24)) {
      s2lines[i] <- paste(scripts$Line[which(scripts$Season == j & scripts$Episode == i)], collapse = "")
    }
  }
  else if (j == 3) {
    s3lines <- vector()
    for (i in seq_len(16)) {
      s3lines[i] <- paste(scripts$Line[which(scripts$Season == j & scripts$Episode == i)], collapse = "")
    }
  }
  else if (j == 4) {
    s4lines <- vector()
    for (i in seq_len(22)) {
      s4lines[i] <- paste(scripts$Line[which(scripts$Season == j & scripts$Episode == i)], collapse = "")
    }
  }
  else if (j == 5) {
    s5lines <- vector()
    for (i in seq_len(22)) {
      s5lines[i] <- paste(scripts$Line[which(scripts$Season == j & scripts$Episode == i)], collapse = "")
    }
  }
  else if (j == 6) {
    s6lines <- vector()
    for (i in seq_len(20)) {
      s6lines[i] <- paste(scripts$Line[which(scripts$Season == j & scripts$Episode == i)], collapse = "")
    }
  }
  else if (j == 7) {
    s7lines <- vector()
    for (i in seq_len(12)) {
      s7lines[i] <- paste(scripts$Line[which(scripts$Season == j & scripts$Episode == i)], collapse = "")
    }
  }
}





for (i in seq_len(123)) {
  if (1 <= i & i <= 6) {
      comb_ep_data[i, 10] <- reading_ease(s1lines[i])
  }
  else if (7 <= i & i <= 30) {
    comb_ep_data[i, 10] <- reading_ease(s2lines[i-6])
  }
  else if (31 <= i & i <= 46) {
    comb_ep_data[i, 10] <- reading_ease(s3lines[i-30])
  }
  else if (47 <= i & i <= 68) {
    comb_ep_data[i, 10] <- reading_ease(s4lines[i-46])
  }
  else if (69 <= i & i <= 90) {
    comb_ep_data[i, 10] <- reading_ease(s5lines[i-68])
  }
  else if (91 <= i & i <= 110) {
    comb_ep_data[i, 10] <- reading_ease(s6lines[i-90])
  }
  else if (111 <= i & i <= 122) {
    comb_ep_data[i, 10] <- reading_ease(s7lines[i-110])
  }
}

View(comb_ep_data)

```

## (2)

```{r}
main_characters <- c("Andy Dwyer", "Ann Perkins", "April Ludgate", "Ben Wyatt", "Chris Traeger", "Donna Meagle", "Jerry Gergich", "Leslie Knope", "Ron Swanson", "Tom Haverford")

episodes1 <- vector()
titles1 <- vector()
writer1 <- vector()
for (i in 1:6) {
  episodes1 <- c(episodes1, rep(i, 10))
  titles1 <- c(titles1, rep(comb_ep_data$Title[i], 10))
  writer1 <- c(writer1, rep(comb_ep_data$`Written by`[i], 10))
}
episodes2 <- vector()
titles2 <- vector()
writer2 <- vector()
for (i in 1:24) {
  episodes2 <- c(episodes2, rep(i, 10))
  titles2 <- c(titles2, rep(comb_ep_data$Title[i + 6], 10))
  writer2 <- c(writer2, rep(comb_ep_data$`Written by`[i + 6], 10))
}
episodes3 <- vector()
titles3 <- vector()
writer3 <- vector()
for (i in 1:16) {
  episodes3 <- c(episodes3, rep(i, 10))
  titles3 <- c(titles3, rep(comb_ep_data$Title[i + 30], 10))
  writer3 <- c(writer3, rep(comb_ep_data$`Written by`[i + 30], 10))
}
episodes4 <- vector()
titles4 <- vector()
writer4 <- vector()
for (i in 1:22) {
  episodes4 <- c(episodes4, rep(i, 10))
  titles4 <- c(titles4, rep(comb_ep_data$Title[i +46], 10))
  writer4 <- c(writer4, rep(comb_ep_data$`Written by`[i + 46], 10))
}
episodes5 <- vector()
titles5 <- vector()
writer5 <- vector()
for (i in 1:22) {
  episodes5 <- c(episodes5, rep(i, 10))
  titles5 <- c(titles5, rep(comb_ep_data$Title[i + 68], 10))
  writer5 <- c(writer5, rep(comb_ep_data$`Written by`[i + 68], 10))
}
episodes6 <- vector()
titles6 <- vector()
writer6 <- vector()
for (i in 1:20) {
  episodes6 <- c(episodes6, rep(i, 10))
  titles6 <- c(titles6, rep(comb_ep_data$Title[i + 88], 10))
  writer6 <- c(writer6, rep(comb_ep_data$`Written by`[i + 88], 10))
}
episodes7 <- vector()
titles7 <- vector()
writer7 <- vector()
for (i in 1:12) {
  episodes7 <- c(episodes7, rep(i, 10))
  titles7 <- c(titles7, rep(comb_ep_data$Title[i + 100], 10))
  writer7 <- c(writer7, rep(comb_ep_data$`Written by`[i + 100], 10))
} 
episodes <- c(episodes1, episodes2, episodes3, episodes4, episodes5, episodes6, episodes7)
titles <- c(titles1, titles2, titles3, titles4, titles5, titles6, titles7)
writers <- c(writer1, writer2, writer3, writer4, writer5, writer6, writer7)

seasons <- c(rep(1, 60), rep(2, 240), rep(3, 160), rep(4, 220), rep(5, 220), rep(6, 200), rep(7, 120))





  
RE_by_char <- data.frame ("Season" = seasons, "Episode" = episodes, "Title" = titles, "Writer" = writers, "Character" = c(rep(main_characters, 122)), "Reading Ease" = c(rep(1, 1220)) )


```

# **Part 2: Exploratory Data Analysis**

# Question 5: Data Visualizations

## (a) Line Plots

### (1)

```{r}
viewers1 <- c(comb_ep_data$`U.S. viewers(millions)`[1:6])
viewers2 <- c(comb_ep_data$`U.S. viewers(millions)`[7:30])
viewers3 <- c(comb_ep_data$`U.S. viewers(millions)`[31:46])
viewers4 <- c(comb_ep_data$`U.S. viewers(millions)`[47:68])
viewers5 <- c(comb_ep_data$`U.S. viewers(millions)`[69:90])
viewers6 <- c(comb_ep_data$`U.S. viewers(millions)`[91:110])
viewers7 <- c(comb_ep_data$`U.S. viewers(millions)`[111:122])



plot(seq(1,6), viewers1,  type = "l", lty = 1, col = "red", xlim = c(1, 25), ylim = c(1, 8), xlab = "Season", ylab = "Viewers (in millions)", main = "Parks and Rec Viewers Per Episode", lwd = 2)

lines(seq(1, 24), viewers2, lty = 1, col = "orange", lwd = 2)

lines(seq(1, 16), viewers3,lty = 1, col = "green", lwd = 2)

lines(seq(1, 22), viewers4, lty = 1, col = "blue", lwd = 2)

lines(seq(1, 22), viewers5, lty = 1, col = "purple", lwd = 2)

lines(seq(1, 20), viewers6, lty = 1, col = "black", lwd = 2)

lines(seq(1, 12), viewers7, lty = 1, col = "turquoise", lwd = 2)

legend(21, 7.7, legend = c("Season1", "Season 2", "Season3", "Season4", "Season 5", "Season 6", "Season 7"), col = c("red", "orange", "green", "blue", "purple", "black", "turquoise"), pch = 19, cex = 0.7)

```

### (2)

```{r}
rating1 <- c(comb_ep_data$rating[1:6])
rating2 <- c(comb_ep_data$rating[7:30])
rating3 <- c(comb_ep_data$rating[31:46])
rating4 <- c(comb_ep_data$rating[47:68])
rating5 <- c(comb_ep_data$rating[69:90])
rating6 <- c(comb_ep_data$rating[91:110])
rating7 <- c(comb_ep_data$rating[111:122])

plot(seq(1,6), rating1,  type = "l", lty = 1, col = "red", xlim = c(1, 25), ylim = c(6, 10), xlab = "Season", ylab = "IMDB Rating", main = "Parks and Rec IMDB Rating By Episode ", lwd = 2)

lines(seq(1, 24), rating2, lty = 1, col = "orange", lwd = 2)

lines(seq(1, 16), rating3,lty = 1, col = "green", lwd = 2)

lines(seq(1, 22), rating4, lty = 1, col = "blue", lwd = 2)

lines(seq(1, 22), rating5, lty = 1, col = "purple", lwd = 2)

lines(seq(1, 20), rating6, lty = 1, col = "black", lwd = 2)

lines(seq(1, 12), rating7, lty = 1, col = "turquoise", lwd = 2)

legend(22, 7.7, legend = c("Season1", "Season 2", "Season3", "Season4", "Season 5", "Season 6", "Season 7"), col = c("red", "orange", "green", "blue", "purple", "black", "turquoise"), pch = 19, cex = 0.7)


```

## (b) Scatter Plots

### (1)

```{r}
scatter_hist <- function(x, y){
  location <- matrix(c(2,0,1,3), ncol=2, byrow=TRUE)
  layout(location, widths = c(0.8, 0.2), heights = c(0.2, 0.8))
  xhist = hist(x, plot=FALSE)
  yhist = hist(y, plot=FALSE)
  top = max(c(xhist$counts, yhist$counts))
  par(mar = c(3,3,1,1))
  plot(x,y)
  par(mar = c(0,3,1,1))
  barplot(xhist$counts, axes = FALSE, ylim = c(0, top), space=0)
  par(mar = c(3,0,1,1))
  barplot(yhist$counts, axes=FALSE, xlim = c(0, top), space=0, horiz=TRUE)
  par(oma = c(3,3,0,0))
}
x <- c(1,2,3,4,5,6)
y <- c(3,4,5,6,7,8)
scatter_hist(x,y)




```

### (2)

```{r}


```


## (c) Box Plots

```{r}


```

## (d) Histograms

```{r}


```















