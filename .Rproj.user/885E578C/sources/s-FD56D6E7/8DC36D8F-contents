#Homework 1 Stats 102A
library("styler")
library("prettycode")

#Question 1A
gcd <- function(a, b) {
  #calculates the greatest common division using the Euclidean algorithm.
  #first check if the inputs are nonnegative and integer, then use divide and mode.
  #a, b: 1-Dinteger input (must be integer and positive)
  #remainder, new_rem: integer calculation resulted in the local environment as remainder.
  #div: 1-Dinteger dividend
  #return: div : 1-D nterger greatest common divisor
  if (a < 0 | b < 0 | (a %% 1 != 0))
    stop("Check your input.")
  if (a < b) {
    c <- a
    a <- b
    b <- c
  }
  
  div <- b
  remainder <- a %% b
  if (remainder == 0) {
    return (b)
  }
  while (remainder != 0) {
    new_rem = div %% remainder
    div <- remainder
    remainder <- new_rem
  }
  div
}

#Question 1B
gcd_3 <- function(a, b, c) {
  #same as above------with 3 input
  #concatenate gcd(b,c) with number a.
  #a,b,c: positive integer
  #return interger greatest common divisor
  gcd(a, gcd(b, c))
}


#Question2 2A
is_prime <- function (x) {
  #the function returns TRUE or FALSE depending on
  #whether or not the number(vector of number) is prime.
  #x: ingle integer or a vector of integer 1-D
  #y: output logical type
  single_prime <- function(x) {
    if (x <= 1 |x %% 1 != 0)
      result = FALSE
    else if (x == 2)
      result = TRUE
    else {
      for (i in seq(2, (x - 1))) {
        if (x %% i == 0) {
          result = FALSE
          break
        }
        else
          result = TRUE
      }
    }
    result
  }
  a <- vector()
  for (i in 1:length(x)) {
    a[i] <- single_prime(x[i])
    
  }
  a
}


#Question2 2B
get_factors <- function(x) {
  #the function takes a pisitive integer x and returns the vector of
  #(not necessarily unique) prime factors of x.
  #Args:
  #x: positive 1-D integer
  #i: 1-D integer (in seq(2,x))
  #j: 1-D integer indice (starts from 1)
  #prime_pos: 1-D integer vector //return the position of prime factor
  #prime_fac: 1-D integer vector//return the prime factor
  #Return:
  #fac: 1-D vector of integer
  if (x == 1) {
    prime_fac = 1
  }
  else{
    j <- 1
    fac <- vector()
    for (i in seq(2, x)) {
      while (x %% i == 0) {
        fac[j] <- i
        j <- j + 1
        x <- x / i
        if (x <= 0)
          break
      }
    }
    prime_pos <- which(is_prime(fac) == TRUE)
    prime_fac <- fac[prime_pos]
  }
  prime_fac
}
